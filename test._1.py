
#  =========== خاص بالملحوظات ===========

# ---------------------------------------
# انواع البيانات
# ---------------------------------------

print(type("hello world")) #  str  =>  string

print(type(100)) #  int => integer

print(type(100.5)) #  float => floating point number

print(type([1,2,3,4,5])) #  list => list

print(type((1,2,3,4,5,6))) # tuple => tuple

print(type({"One" : 1, "Two" : 2, "Three" : 3})) # dic => dictionary

print(type(2 == 2)) # bool => boolean
# ---------------------------------------

# ============== ملحوظات الكومنتات ===============
"""
this is not comment 
"""
# this is comment
# ---------------------------------------

# ============== ملحوظات للسترينجس ==============
# \n =          يجعل الكلمة علي سطر جديد
# \" =          لوضع دبل كوتيشن في الكلام
# \ =           لوضع باك سلاش في الكلام
# \t =          تعمل تاب او اربعة مسافات بين الكلام
# .lower        يجعل هذا الفانكشن الكلام كله بالحروف السمول
# .islower      تعمل تشيك اذا كانت جميع احرف الكلام بالسمول 
# .upper        يجعل هذا الفانكشن الكلام كله بالحروف الكابتل
# .isupper      عمل تشيك اذا كانت جميع احرف الكلام بالكابتل
# len ()        يري ما مدي حجم او كبر الاسترينج بتاعي
#  []           لمعرفة مكان الحرف بتاعي نكتب داخل القوس ارقام
# .index()        لمعرفة مكان الاحرف بتاعي نكتب داخل القوس احرف
# .replace ("القيمة الثانية التي سوف نضعها مكان القيمة الاولي" , "القيمة الاولي التي سوف يحدث تبديل لها")     لحدوث تبديل بين القيم
# ---------------------------------------

# ============== ملحوظات علي الارقام ==============
# %             هي قسمة رقم علي رقم ويرجع المتبقي
# str()         لتحويل الرقم لسترينج
# abs()         لجلب القيمة المطلقة للرقم
# pow( , )      لعمل الرقم مع الاس
# max( , , , , , )         لجلب الرقم الاكبر
# min( , , , , , )         لجلب الرقم الاصغر
# round()        تعمل علي تقريب الرقم لاقرب عدد صحيح
# floor()        يعمل علي جلب الرقم الاقل عكس القيمة المطلقة
# ceil()         يعمل علي جلب الرقم الاكبر عكس القيمة المطلقة
# sqrt()         تعمل علي جلب الجزر التربيعي لرقم
# float()        الارقام العشرية
# int()          الارقام الصحيحة
# ---------------------------------------

# ============== ملحوظات للمدخلات ==============
# input()        لوضع مدخلات داخل الانبوت
# ---------------------------------------

# ============== ملحوظات علي ليستس ==============
# my_list = [ , , , , , ]        لعمل ليست نضع سكوير براكتس ونضع بها اي قيمة مثلا كلمات ارقام بوليين او ليست اخري داخل الليست الاصلي

# لتغير قيمة من القيم التي داخل الليست نفعل الاتي 
# my_list[وهنا نضع رقم القيمة التي نود تغييرها] = ونكتب هنا القيمة التي نود ان تكون مكان القيمة الاصلية

# لاستدعاء قيمة معينة من القيم التي داخل الليست نفعل الاتي
# print(my_list[ونضع هنا القيمة التي نود استدعائها])
# print(my_list[0:3])       معنها مثلا اننا نريد استدعاء القيم من القيمة الاولي الي القيمة الثالثة ماعدا القيمة الرابعة
# print(my_list[1:])        معناها مثلا اننا نريد استدعاء جميع القيم من اول القيمة الثانية اللي النهاية

# طرق لضم الليستس
# اسم الليست الاولي .extend(اسم الليست الاخري التي نريد ضمها مع الليست الاولي)     لضم الليستس مع بعضها

# طريقة اخري لضم الليستس مع بعضها
# اسم الليست الثانية =+ اسم الليست الاولي

# طريقة ثالثة لضم الليستس مع بعضها
# اسم الليست الثانية + اسم الليست الاولي = اسم الليست الاولي

# اسم الليست .append(" نضع هنا القيمة التي نود اضافتها في الليست ")
# اسم الليست .insert(وضع هنا القيمة , وضع هنا رقم اي مكان التي نود وضع القيمة فيه لليست)
# اسم الليست .remove(" وضع القيمة التي نود حذفها من الليست ")
# اسم الليست .clear()            لحذف جميع القيم داخل الليست
# اسم الليست .pop()              لحذف اخر قيمة في الليست
# اسم الليست .count(" نكتب هنا القيمة التي نود معرفة كم مرة تم تقرارها في الليست ")
# اسم الليست .sort()             تعمل علي ترتيب القيم الخاصة بالليست
# اسم الليست الجديدة .copy()      لعمل نسخة من الليست القيدمة
# ---------------------------------------

# ============== ملحوظات علي tuples ==============
# اسم الصف = ( , , , , ,)
# لا يمكن التعديل فيها اثناء كتابة البرنامج عكس ليستس
# ---------------------------------------

# ============== ملحوظات علي الفانكشنز ==============
# لعمل فانكشن خاصة بي 
# def اسم الدالة التي اود عملها() :

# لاستدعاء الفانكشن الخاصة بي
# هكذا يتم استدعاء الفانكشن الخاصة بي             ()نكتب اسم الفانكشن     
# return      معناه اخر سطر في الدالة ولا اسطتيع كتابة اي شئ بعدها
#    ^         استعماله يكون اود ان يرجع القيمة التي اودها
# ---------------------------------------

# ============== ملحوظات في الجمل الشرطية ==============
# في if 
#  ==       للسؤال هل دة يساوي دة
#  !=       للسؤال هل دة لا يساوي دة
#  or
#  and 

# في elif
#  and not
#  mot